Browser A->rtc_server.js: GET /
note right of rtc_server.js: create channel 1
rtc_server.js->Browser A: redirect /rtc.html?channel=1#firstserver

Browser A->rtc_server.js: GET /rtc.html?channel=1#firstServer
rtc_server.js->Browser A: \"<html>...\"

Browser A<-->rtc_server.js: Signaling WebSocket

Browser A->rtc_server.js: GET /peers/1
rtc_server.js->Browser A: [ PEER1 ]


Browser B->rtc_server.js: GET /rtc.html?channel=1
rtc_server.js->Browser B: \"<html>...\"

Browser B<-->rtc_server.js: Signaling WebSocket

Browser B->rtc_server.js: GET /peers/1
rtc_server.js->Browser B: [ PEER1, PEER2 ]

Browser A->rtc_server.js: GET /peers/1
rtc_server.js->Browser A: [ PEER1, PEER2 ]

Browser A<-->Browser B: RTCPeerConnection

Browser A->Browser B: Raft RPC
Browser B->Browser A: Raft RPC Response
